version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-stretch-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: ubuntu
          RAILS_ENV: test
          BUNDLE_PATH: ~/tmp/vendor/bundle
          BUNDLE_APP_CONFIG: ~/tmp/vendor/bundle
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: ""
      - image: redis:4.0.12
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: chat-app-v1-{{ checksum "Gemfile.lock" }}

      - run: bundle config without development
      - run: bundle install --jobs=4 --retry=3
      - save_cache:
          key: chat-app-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/tmp/vendor/bundle

      - run: cp config/database.yml.template config/database.yml
      - run: cp config/storage.yml.template config/storage.yml

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          key: chat-app-v1-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: chat-app-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup DB
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run: bundle exec rubocop --config .rubocop.yml

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results
